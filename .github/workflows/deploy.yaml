name: Deploy
on:
  # manual trigger
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "16"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Tests pass
        run: yarn test

      - name: Build the app
        run: yarn build

      - name: Publish to NPM
        uses: JS-DevTools/npm-publish@18351461ae08dde235c0ccee0633ec905f0b9a52
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Pin to IPFS
        id: upload
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.3
        with:
          pin-name: JediSwap Default Token List ${{ needs.bump_version.outputs.new_tag }}
          path: "./build/jediswap-default.tokenlist.json"
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: Check Concatenation
        run: echo "dnslink=/ipfs/${{ steps.upload.outputs.hash }}"

      - name: Update DNS with new IPFS hash
        uses: Roosterfish/aws-route53-record-set-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_route53_hosted_zone_id: ${{ secrets.AWS_ROUTE53_HOSTED_ZONE_ID }}
          aws_route53_rr_action: "UPSERT"
          aws_route53_rr_name: "_dnslink.tokens.jediswap.xyz"
          aws_route53_rr_type: "TXT"
          aws_route53_rr_ttl: "300"
          aws_route53_rr_value: '"dnslink=/ipfs/${{ steps.upload.outputs.hash }}"'
        # with:
        #   cid: ${{ steps.upload.outputs.hash }}
